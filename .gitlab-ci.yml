include:
  - component: gitlab.gnome.org/GNOME/citemplates/release-service@master
    inputs:
      dist-job-name: "build-release-tarball"
      tarball-artifact-path: "${TARBALL_ARTIFACT_PATH}"

stages:
  - build
  - deploy

variables:
  DEPENDENCIES: dbus-x11 gcc git gnome-common gtk-doc make openssh python redhat-rpm-config lcov libasan libubsan meson ninja-build systemd-devel
  TARBALL_ARTIFACT_PATH: "_build/meson-dist/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.tar.xz"

.build:
  stage: build
  image: fedora:latest
  before_script:
    - dnf install -y 'dnf-command(builddep)'
    - dnf builddep -y gnome-keyring
    - dnf install -y $DEPENDENCIES
    - dbus-uuidgen --ensure
    - useradd user

fedora:Werror:
  extends: .build
  script:
    - mkdir _build
    - chown user _build
    - runuser -u user -- meson setup _build
    - runuser -u user -- meson compile -C _build
    - runuser -u user -- dbus-run-session -- meson test -C _build
  artifacts:
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
    name: "gkr-werror-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/meson-logs"
      - $TARBALL_ARTIFACT_PATH

fedora:asan:
  extends: .build
  tags:
    - asan # LSAN needs CAP_SYS_PTRACE
  script:
    - mkdir _build
    - chown user _build
    - runuser -u user -- meson setup _build -Db_sanitize=address
    - export G_SLICE=always-malloc G_DEBUG=gc-friendly ASAN_OPTIONS=abort_on_error=1:fast_unwind_on_malloc=0
    - runuser -u user -- meson compile -C _build
    - runuser -u user -- dbus-run-session -- meson test -C _build
  allow_failure: true
  artifacts:
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
    name: "gkr-werror-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/meson-logs"

fedora:ubsan:
  extends: .build
  script:
    - mkdir _build
    - chown user _build
    - runuser -u user -- meson setup _build -Db_sanitize=undefined 
    - runuser -u user -- meson compile -C _build
    - runuser -u user -- dbus-run-session -- meson test -C _build
  artifacts:
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
    name: "gkr-ubsan-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/meson-logs"

fedora:coverage:
  extends: .build
  script:
    - dnf install -y 'dnf-command(builddep)' $DEPENDENCIES lcov gcovr
    - mkdir _build
    - chown user _build
    - runuser -u user -- meson setup _build -Db_coverage=true
    - runuser -u user -- meson compile -C _build
    - runuser -u user -- dbus-run-session -- meson test -C _build
    - runuser -u user -- ninja coverage-xml -C _build
  coverage: '/^\s+lines.+:\s+([\d.]+\%)\s+/'
  artifacts:
    reports:
      junit: "_build/meson-logs/testlog.junit.xml"
      coverage_report:
        coverage_format: cobertura
        path: "_build/meson-logs/coverage.xml"
    name: "gkr-coverage-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/meson-logs"

build-release-tarball:
  extends: .build
  stage: deploy
  script:
    - meson setup _build
    - meson dist -C _build --no-tests
  artifacts:
    paths:
      - $TARBALL_ARTIFACT_PATH
  rules:
    - if: $CI_COMMIT_REF_PROTECTED
